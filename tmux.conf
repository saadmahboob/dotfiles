#
# CONFIGURE TERMINAL ENVIRONMENT
#

# Hack to make clipboard integration work on mac
if-shell 'type reattach-to-user-namespace > /dev/null' \
  'set-option -g default-command "reattach-to-user-namespace -l $SHELL"'

# Hack to make colors work properly
set -g default-terminal "screen-256color"

set -g allow-rename off # prevent overriding names
set -g display-time 3000 # display messages longer
set -g escape-time 0 # fix escape delay
set -g mode-keys vi # make vimlike
set -g repeat-time 1000 # lengthen key repeat delay
set -g set-clipboard off # don't print garbage on copy
set -g status-position top # status on top
set -g terminal-overrides 'xterm*:smcup@:rmcup@' # sane scrolling

# One-index panes and windows, and maintain their numbering
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on

# Enable mouse
set -g mouse on


#
# CONFIGURE BINDINGS
#
# Start clean
unbind -a

# Set prefix to C-a
set -g prefix C-a
bind C-a send-prefix

# Rebind basic commands
bind : command-prompt
bind d detach-client
bind [ copy-mode
bind -r ^z resize-pane -Z
bind -r { swap-pane -U
bind -r } swap-pane -D

# Configure pane navigation with vim-like motions.
bind -r ^h select-pane -L
bind -r ^j select-pane -D
bind -r ^k select-pane -U
bind -r ^l select-pane -R
bind -r H resize-pane -L
bind -r J resize-pane -D
bind -r K resize-pane -U
bind -r L resize-pane -R

# Vim-like selection/copy
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-pipe "clipboard copy"

# Force opening splits to default to columns, and retain working directory
bind -r ^s split-window -v -c "#{pane_current_path}"
bind -r S split-window -h -c "#{pane_current_path}"

# Window navigation
bind -r ^p previous-window
bind -r ^n next-window
bind -r P swap-window -t -1
bind -r N swap-window -t +1

# Ask for name on new window
bind c command-prompt -p "new window:" "new-window; rename-window '%%'"

# Rename window
bind r command-prompt -p "window name:" "rename-window '%%'"
bind , command-prompt -p "rename window:" -I "#W" "rename-window '%%'"

# Reloading macro
bind R source-file ~/.tmux.conf \; display "Reloaded!"

# Rebind mouse
bind -n MouseDown1Pane select-pane -t=\; send-keys -M
bind -n MouseDrag1Pane if -Ft= '#{mouse_any_flag}' 'send-keys -M' 'copy-mode -M'
bind -n WheelUpPane if-shell -Ft= '#{?pane_in_mode,1,#{mouse_any_flag}}' \
        'send -Mt=' \
        'if-shell -Ft= "#{alternate_on}" "send -t= Up" "copy-mode -et="'
bind -n WheelDownPane if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
        'send -Mt=' 'if-shell -Ft= "#{alternate_on}" \
        "send -t= Down" "send -Mt="'
bind -n MouseDrag1Border resize-pane -M
bind -n MouseDown1Status select-window -t=
bind -n WheelUpStatus previous-window
bind -n WheelDownStatus next-window


#
# CONFIGURE STATUS BAR
#
set -g status on
set -g status-interval 1
set -g status-justify "left"

set -g status-bg "colour24"
set -g status-fg "colour31"

set -g message-bg "colour24"
set -g message-fg "colour117"
set -g message-command-fg "colour24"
set -g message-command-bg "colour117"

set -g pane-border-fg "colour24"
set -g pane-active-border-fg "colour231"

set -g status-left-length "100"
set -g status-left "#[fg=colour23,bg=colour231] #S #[fg=colour231,bg=colour24]"

set -g window-status-separator ""
set -g window-status-format "#[fg=colour81,bg=colour24] [#I] #W "
set -g window-status-current-format "#[fg=colour24,bg=colour31]#[fg=colour153,bg=colour31] [#I] #W #[fg=colour31,bg=colour24]"

set -g status-right-length "200"
set -g status-right "#(~/.dotfiles/scripts/tmux-prompts.sh) #[fg=colour31,bg=colour24]#[fg=colour153,bg=colour31] %l:%M %p #[fg=colour81]#[fg=colour153] %m/%d/%Y #[fg=colour231,bg=colour31]#[fg=colour23,bg=colour231] $USER@#h "
